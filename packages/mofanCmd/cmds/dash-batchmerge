#!/usr/bin/env node
const program = require("commander");
const shelljs = require("../utils/shelljsUtil");
const { askFortargetBranchs } = require("../utils/config");
const { spawn } = require("child_process");

// const jenkinsUrl = (app, env) =>
//   `http://192.168.0.163:8080/job/tenant-fe/job/${env}/job/${app}/build?token=jenkins-szhtxx-token `;

program
  .option("-s, --source <source>", "source branch")
  .option("-t, --targets [targets...]", "target branch")
  .action(function ({ source, targets }, args) {
    console.log("ðŸš€ ~ file: dash-batchmerge:14 ~ source, targets:", source, targets)
    const run = (branchs, sourceBranch) => {
      branchs.forEach((branch) => {
        spawn(`mofancmds autoMerge ${branch} ${sourceBranch}; git push`, (err) => {
          console.log("ðŸš€ ~ file: dash-batchmerge:19 ~ spawn ~ err:", err)
        });
      });
      shelljs.exec(`git checkout ${sourceBranch}`);
    };

    const dealwithBranchs = (targetBranchs, sourceBranch) => {
      if (targetBranchs && targetBranchs.length) {
        run(targetBranchs, sourceBranch);
      } else {
        askFortargetBranchs().then((answer) => {
          const { gitBranchs } = answer;
          run(gitBranchs, sourceBranch);
        });
      }
    };

    dealwithBranchs(targets, source);
  })
  .parse(process.argv);
