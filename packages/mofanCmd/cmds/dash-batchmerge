#!/usr/bin/env node
const program = require("commander");
const shelljs = require("../utils/shelljsUtil");
const { askFortargetBranchs } = require("../utils/config");

// const jenkinsUrl = (app, env) =>
//   `http://192.168.0.163:8080/job/tenant-fe/job/${env}/job/${app}/build?token=jenkins-szhtxx-token `;

program
  .option("-s, --source <source>", "source branch")
  .option("-t, --targets [targets...]", "target branch")
  .action(function ({ source, targets }, args) {
    const run = (branchs, sourceBranch) => {
      branchs.forEach((branch) => {
        const validateBranchFolderName = branch.replace("/", "-")
        const res = shelljs.exec(`git worktree add ${validateBranchFolderName}Merge -b ${branch}-merge-${sourceBranch}
          cd ${validateBranchFolderName}Merge
          `
        );
        console.log("ðŸš€ ~ file: dash-batchmerge:21 ~ branchs.forEach ~ res:", res)
      });
      shelljs.exec(`git checkout ${sourceBranch}`);
    };

    const dealwithBranchs = (targetBranchs, sourceBranch) => {
      if (targetBranchs && targetBranchs.length) {
        run(targetBranchs, sourceBranch);
      } else {
        askFortargetBranchs().then((answer) => {
          const { gitBranchs } = answer;
          run(gitBranchs, sourceBranch);
        });
      }
    };

    dealwithBranchs(targets, source);
  })
  .parse(process.argv);
