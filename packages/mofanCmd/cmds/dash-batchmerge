#!/usr/bin/env node
const program = require("commander");
const shelljs = require("../utils/shelljsUtil");
const { askFortargetBranchs } = require("../utils/config");

// const jenkinsUrl = (app, env) =>
//   `http://192.168.0.163:8080/job/tenant-fe/job/${env}/job/${app}/build?token=jenkins-szhtxx-token `;

program
  .option("-s, --source <source>", "source branch")
  .option("-t, --targets [targets...]", "target branch")
  .action(function ({ source, targets }, args) {
    const run = (branchs, sourceBranch) => {
      branchs.forEach((branch) => {
        // 生成多个子进程执行以下git操作
        // 1、生成多个worktree
        // 2、切换到每个worktree
        // 3、切换到branch
        // 4、merge sourceBranch
        // 5、git push
        // 6、删除worktree
        const res = shelljs.exec(
          `git worktree add -b ${branch} ${branch} && cd ${branch}-merge && git checkout ${branch} && git merge ${sourceBranch} && git push && cd.. && git worktree remove ${branch}`
        );
        console.log("🚀 ~ file: dash-batchmerge:25 ~ branchs.forEach ~ res:", res)
      });
    };

    const dealwithBranchs = (targetBranchs, sourceBranch) => {
      if (targetBranchs && targetBranchs.length) {
        run(targetBranchs, sourceBranch);
      } else {
        askFortargetBranchs().then((answer) => {
          const { gitBranchs } = answer;
          run(gitBranchs, sourceBranch);
        });
      }
    };

    dealwithBranchs(targets, source);
  })
  .parse(process.argv);
